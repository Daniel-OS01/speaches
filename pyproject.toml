[project]
name = "speaches"
version = "0.1.0"
requires-python = ">=3.12,<3.13"
dependencies = [
    "ctranslate2>=4.5.0",
    "fastapi>=0.115.6",
    "faster-whisper>=1.1.1",
    "huggingface-hub[hf-transfer]>=0.33.4",
    "kokoro-onnx[gpu]>=0.4.5,<0.5.0",
    "numpy>=2.3.1",
    "piper-phonemize ; sys_platform == 'linux'",
    "piper-tts>=1.2.0 ; sys_platform == 'linux'",
    "pydantic-settings>=2.10.1",
    "pydantic>=2.11.7",
    "python-multipart>=0.0.10",
    "sounddevice>=0.5.2",
    "soundfile>=0.13.1",
    "uvicorn>=0.35.0",
    "openai[realtime]>=1.109.1",
    "aiostream>=0.7.0",
    "cachetools>=6.1.0",
    "httpx-ws>=0.7.2",
    "aiortc>=1.13.0",
    "httpx>=0.28.1",
    "onnx-asr>=0.7.0",
    "ruff>=0.12.3",
    "basedpyright>=1.30.1",
]

[project.optional-dependencies]
dev = [
    "anyio>=4.9.0",
    "basedpyright>=1.30.1",
    "pytest-antilru>=2.0.0",
    "mkdocs-material>=9.6.15",
    "mkdocstrings[python]>=0.29.1",
    "pytest-asyncio>=1.0.0",
    "pytest-xdist>=3.8.0",
    "pytest>=8.4.1",
    "ruff>=0.12.3",
    "srt>=3.5.3",
    "webvtt-py>=0.5.1",
    "pre-commit>=4.2.0",
    "pytest-mock>=3.14.1",
    "mkdocs-render-swagger-plugin>=0.1.2",
    "mdx-truly-sane-lists>=1.3",
    "datamodel-code-generator>=0.31.2",
    "httpx-sse>=0.4.1",
]
ui = [
    "gradio>=5.49.1",
    "httpx-sse>=0.4.1",
]
opentelemetry = [
    "opentelemetry-distro>=0.50b0",
    "opentelemetry-exporter-otlp>=1.27.0",
    "opentelemetry-instrumentation-asgi==0.50b0",
    "opentelemetry-instrumentation-asyncio==0.50b0",
    "opentelemetry-instrumentation-logging==0.50b0",
    "opentelemetry-instrumentation-threading==0.50b0",
    "opentelemetry-instrumentation-urllib==0.50b0",
    "opentelemetry-instrumentation-fastapi==0.50b0",
    "opentelemetry-instrumentation-grpc==0.50b0",
    "opentelemetry-instrumentation-httpx==0.50b0",
    "opentelemetry-instrumentation-requests==0.50b0",
    "opentelemetry-instrumentation-urllib3==0.50b0",
    "opentelemetry-instrumentation-openai-v2>=2.1b0",
    "opentelemetry-instrumentation-openai>=0.37.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 120
target-version = "py312"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "FIX",
    "TD",
    "ERA",
    "ANN003",
    "B006",
    "B008",
    "COM812",
    "D10",
    "D401",
    "EM102",
    "FBT001",
    "FBT002",
    "PLR0913",
    "PLR2004",
    "RET504",
    "RET505",
    "RET508",
    "S101",
    "S104",
    "S603",
    "SIM102",
    "T201",
    "TRY003",
    "TRY300",
    "TRY301",
    "W505",
    "ISC001",
    "INP001",
    "PT018",
    "G004",
    "E501",
    "PLC0415"
]

[tool.ruff.lint.isort]
force-sort-within-sections = true

[tool.ruff.lint.per-file-ignores]
"src/speaches/types/**.py" = ["PYI051"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.basedpyright]
typeCheckingMode = "standard"
pythonVersion = "3.12"
pythonPlatform = "Linux"
venvPath = "."
venv = ".venv"
ignore = [
    "misc/**"
]

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"
filterwarnings = [
    'ignore::DeprecationWarning'
]
markers = [
    "requires_openai",
]

[tool.uv]
constraint-dependencies = ["llvmlite>=0.40.0"]
override-dependencies = ["onnxruntime-gpu>=1.22.0 ; platform_machine == 'x86_64'", "onnxruntime>=1.22.0 ; platform_machine != 'x86_64'"]

[tool.uv.sources]
piper-phonemize = [
  { url = "https://github.com/fedirz/piper-phonemize/raw/refs/heads/master/dist/piper_phonemize-1.2.0-cp312-cp312-manylinux_2_28_aarch64.whl", marker = "platform_machine == 'aarch64' and sys_platform == 'linux'" },
  { url = "https://github.com/fedirz/piper-phonemize/raw/refs/heads/master/dist/piper_phonemize-1.2.0-cp312-cp312-manylinux_2_28_x86_64.whl", marker = "platform_machine == 'x86_64' and sys_platform == 'linux'" },
]

[tool.uv.workspace]
members = [
    "packages/speaches-cli",
]

[tool.hatch.build]
packages = ["src/speaches"]
